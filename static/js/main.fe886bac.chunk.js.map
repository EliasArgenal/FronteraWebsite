{"version":3,"sources":["SmartWallet.png","firebase-config.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","getFirestore","App","email","setEmail","useState","password","setPassword","isRegistering","setIsRegistering","isLoggedIn","setIsLoggedIn","errorMessage","setErrorMessage","React","createElement","className","src","logo","alt","type","placeholder","value","onChange","e","target","onClick","async","createUserWithEmailAndPassword","alert","error","message","signInWithEmailAndPassword","reportWebVitals","onPerfEntry","Function","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6PCQxC,MAWMC,EAAMC,YAXW,CACrBC,OAAQ,0CACRC,WAAY,6CACZC,UAAW,6BACXC,cAAe,yCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAOXC,EAAOC,YAAQV,GACVW,YAAaX,wBC8ETY,MA/Ff,WACE,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAAUC,GAAeF,mBAAS,KAClCG,EAAeC,GAAoBJ,oBAAS,IAC5CK,EAAYC,GAAiBN,oBAAS,IACtCO,EAAcC,GAAmBR,mBAAS,IAwBjD,OACES,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAQC,UAAU,cAClBF,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,OAAKE,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzCL,IAAAC,cAAA,MAAIC,UAAU,aAAY,gBAIxBN,EA4BAI,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,UAAI,6BACJD,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,UAAI,oBACJD,IAAAC,cAAA,SAAG,sBACHD,IAAAC,cAAA,SAAG,wCAGLD,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,UAAI,uBACJD,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,iCACJD,IAAAC,cAAA,UAAI,oCACJD,IAAAC,cAAA,UAAI,mCAIRD,IAAAC,cAAA,OAAKC,UAAU,WACbF,IAAAC,cAAA,cAAQ,kBACRD,IAAAC,cAAA,cAAQ,aACRD,IAAAC,cAAA,cAAQ,qBA/CZD,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAKP,EAAgB,UAAY,SAChCI,GAAgBE,IAAAC,cAAA,KAAGC,UAAU,SAASJ,GAEvCE,IAAAC,cAAA,SACEK,KAAK,QACLC,YAAY,QACZC,MAAOnB,EACPoB,SAAWC,GAAMpB,EAASoB,EAAEC,OAAOH,SAErCR,IAAAC,cAAA,SACEK,KAAK,WACLC,YAAY,WACZC,MAAOhB,EACPiB,SAAWC,GAAMjB,EAAYiB,EAAEC,OAAOH,SAGxCR,IAAAC,cAAA,UAAQW,QAASlB,EArCNmB,UACnB,UACQC,YAA+B7B,EAAMI,EAAOG,GAClDK,GAAc,GACdkB,MAAM,gCACN,MAAOC,GACPjB,EAAgBiB,EAAMC,WAjBNJ,UAClB,UACQK,YAA2BjC,EAAMI,EAAOG,GAC9CK,GAAc,GACdkB,MAAM,0BACN,MAAOC,GACPjB,EAAgBiB,EAAMC,YA2CbvB,EAAgB,UAAY,SAI/BM,IAAAC,cAAA,UAAQW,QAASA,IAAMjB,GAAkBD,IACtCA,EAAgB,kCAAoC,gCCxDpDyB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC/C,EAAAoC,EAAA,GAAAY,KAAAhD,EAAAiD,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,YCADU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHlC,IAAAC,cAACD,IAAMmC,WAAU,KACfnC,IAAAC,cAACb,EAAG,QAOR+B","file":"static/js/main.fe886bac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SmartWallet.bd9f6140.png\";","// Import the functions you need from the Firebase SDKs\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";   // For Firebase Authentication\r\nimport { getFirestore } from \"firebase/firestore\";  // For Firestore (database)\r\n// Optionally, you can import Analytics if you plan to use it\r\n// import { getAnalytics } from \"firebase/analytics\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAWM2UiQMIGJUX0r7iULsSZ-UCxaK_YmKY\",\r\n  authDomain: \"personal-finance-app-2d328.firebaseapp.com\",\r\n  projectId: \"personal-finance-app-2d328\",\r\n  storageBucket: \"personal-finance-app-2d328.appspot.com\",\r\n  messagingSenderId: \"455906612173\",\r\n  appId: \"1:455906612173:web:cd5801a8c448c7d2926a84\",\r\n  measurementId: \"G-C21C9QW54D\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Initialize Firebase services\r\nconst auth = getAuth(app);  // This is for Firebase Authentication\r\nconst db = getFirestore(app);  // This is for Firestore database\r\n\r\n// Optionally, initialize Analytics if you plan to use it\r\n// const analytics = getAnalytics(app);\r\n\r\nexport { auth, db };  // Export these services to use them in your app\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth } from './firebase-config'; // Firebase config\r\nimport logo from './SmartWallet.png'; // You can use a banking-related logo instead of React's\r\n\r\nfunction App() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isRegistering, setIsRegistering] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // State to track login status\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  // Handle user login\r\n  const handleLogin = async () => {\r\n    try {\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      setIsLoggedIn(true); // Set user as logged in\r\n      alert('Logged in successfully');\r\n    } catch (error) {\r\n      setErrorMessage(error.message);\r\n    }\r\n  };\r\n\r\n  // Handle user registration (sign-up)\r\n  const handleSignUp = async () => {\r\n    try {\r\n      await createUserWithEmailAndPassword(auth, email, password);\r\n      setIsLoggedIn(true); // Automatically log in after sign-up\r\n      alert('Account created successfully');\r\n    } catch (error) {\r\n      setErrorMessage(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      <div className=\"logo-container\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <h1 className=\"App-title\">SmartWallet</h1>\r\n      </div>\r\n        \r\n        {/* Conditional rendering: Show login/signup form if not logged in, else show dashboard */}\r\n        {!isLoggedIn ? (\r\n          <div>\r\n            <h2>{isRegistering ? 'Sign Up' : 'Login'}</h2>\r\n            {errorMessage && <p className=\"error\">{errorMessage}</p>}\r\n\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n\r\n            <button onClick={isRegistering ? handleSignUp : handleLogin}>\r\n              {isRegistering ? 'Sign Up' : 'Login'}\r\n              \r\n            </button>\r\n            \r\n            <button onClick={() => setIsRegistering(!isRegistering)}>\r\n              {isRegistering ? 'Already have an account? Log in' : 'Need an account? Sign up'}\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"dashboard\">\r\n            <h2>Welcome to Your Dashboard</h2>\r\n            <div className=\"account-info\">\r\n              <h3>Account Overview</h3>\r\n              <p>Balance: $5,000.00</p>\r\n              <p>Account Number: 1234-5678-9101-1121</p>\r\n            </div>\r\n\r\n            <div className=\"transactions\">\r\n              <h3>Recent Transactions</h3>\r\n              <ul>\r\n                <li>Deposit: $500 on Oct 19, 2024</li>\r\n                <li>Withdrawal: $100 on Oct 18, 2024</li>\r\n                <li>Payment: $150 on Oct 17, 2024</li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div className=\"actions\">\r\n              <button>Transfer Funds</button>\r\n              <button>Pay Bills</button>\r\n              <button>View Statements</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './styles/tailwind.css';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}